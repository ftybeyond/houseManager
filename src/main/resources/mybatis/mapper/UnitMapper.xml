<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qth.dao.UnitMapper">
  <resultMap id="BaseResultMap" type="com.qth.model.Unit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="building" jdbcType="INTEGER" property="building" />
    <result column="total_floor" jdbcType="INTEGER" property="totalFloor" />
    <result column="house_per_floor" jdbcType="INTEGER" property="housePerFloor" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from unit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qth.model.Unit">
    <selectKey resultType="java.lang.Integer" keyProperty="id">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into unit (id, name, building, 
      total_floor, house_per_floor
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{building,jdbcType=INTEGER}, 
      #{totalFloor,jdbcType=INTEGER}, #{housePerFloor,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.qth.model.Unit">
    update unit
    set name = #{name,jdbcType=VARCHAR},
      building = #{building,jdbcType=INTEGER},
      total_floor = #{totalFloor,jdbcType=INTEGER},
      house_per_floor = #{housePerFloor,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    u.id,
    u.name,
    rb.residentialArea,
    rb.residentialAreaName,
    u.building,
    rb.buildingName,
    u.total_floor,
    u.house_per_floor
    FROM
    unit u
    INNER JOIN (
    SELECT
    r.id AS residentialArea,
    r. NAME AS residentialAreaName,
    b.id AS building,
    b. NAME AS buildingName
    FROM
    residential_area r,
    building b
    WHERE
    r.id = b.residential_area
    ) rb ON u.building = rb.building
    where u.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, building, total_floor, house_per_floor
    from unit
  </select>
  <select id="selectDataTable" resultMap="BaseResultMap" parameterType="com.qth.model.Unit">
    SELECT
    u.id,
    u.name,
    rb.residentialArea,
    rb.residentialAreaName,
    u.building,
    rb.buildingName,
    u.total_floor,
    u.house_per_floor
    FROM
    unit u
    INNER JOIN (
    SELECT
    r.id AS residentialArea,
    r. NAME AS residentialAreaName,
    b.id AS building,
    b. NAME AS buildingName
    FROM
    residential_area r,
    building b
    WHERE
    r.id = b.residential_area
    ) rb ON u.building = rb.building
    <if test="id!=null">
      and u.id=#{id}
    </if>
    <if test="residentialArea!=null">
      and rb.residentialArea=#{residentialArea}
    </if>
    <if test="building!=null">
      and rb.building=#{building}
    </if>
    order by rb.residentialAreaName,rb.buildingName,u.name
    <if test="length>0">
      limit #{start} ,#{length}
    </if>
  </select>
  <select id="selectDataTableCount" resultType="int" parameterType="com.qth.model.Unit">
    select count(*)
    from unit u
    INNER JOIN (
    SELECT
    r.id AS residentialArea,
    r. NAME AS residentialAreaName,
    b.id AS building,
    b. NAME AS buildingName
    FROM
    residential_area r,
    building b
    WHERE
    r.id = b.residential_area
    ) rb ON u.building = rb.building
    <if test="id!=null">
      and u.id=#{id}
    </if>
    <if test="residentialArea!=null">
      and rb.residentialArea=#{residentialArea}
    </if>
    <if test="building!=null">
      and rb.building=#{building}
    </if>
  </select>
  <select id="findByName" resultMap="BaseResultMap">
    SELECT
        *
    FROM
        unit u
    WHERE
        u.building = #{arg0}
    AND u.`name` = #{arg1}
    LIMIT 0,1
  </select>
</mapper>