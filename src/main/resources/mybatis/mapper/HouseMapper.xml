<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qth.dao.HouseMapper">
  <resultMap id="BaseResultMap" type="com.qth.model.House">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="unit" jdbcType="INTEGER" property="unit" />
    <result column="floor" jdbcType="VARCHAR" property="floor" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="area" jdbcType="DECIMAL" property="area" />
    <result column="has_elevator" jdbcType="INTEGER" property="hasElevator" />
    <result column="nature" jdbcType="INTEGER" property="nature" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="building_rise" jdbcType="INTEGER" property="buildingRise" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="owner_name" jdbcType="VARCHAR" property="ownerName" />
    <result column="owner_tel" jdbcType="VARCHAR" property="ownerTel" />
    <result column="owner_psptid" jdbcType="VARCHAR" property="ownerPsptid" />
    <result column="account_balance" jdbcType="DECIMAL" property="accountBalance" />
    <result column="accrual_time" jdbcType="TIMESTAMP" property="accrualTime" />
    <result column="accrual_balance" jdbcType="DECIMAL" property="accrualBalance" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from house
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qth.model.House">
    insert into house (id, name, unit, 
      floor, code, area, 
      has_elevator, nature, type,
      building_rise, unit_price, owner_name,owner_tel,
      owner_psptid, account_balance,accrual_time,accrual_balance)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{unit,jdbcType=INTEGER},
      #{floor,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{area,jdbcType=DECIMAL},
      #{hasElevator,jdbcType=INTEGER}, #{nature,jdbcType=INTEGER}, #{type,jdbcType=INTEGER},
      #{buildingRise,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, #{ownerName,jdbcType=INTEGER},#{ownerTel,jdbcType=INTEGER},
      #{ownerPsptid,jdbcType=INTEGER}, #{accountBalance,jdbcType=DECIMAL},#{accrualTime,jdbcType=TIMESTAMP},#{accrualBalance,jdbcType=DECIMAL})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.qth.model.House">
    update house
    set name = #{name,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=INTEGER},
      floor = #{floor,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      area = #{area,jdbcType=DECIMAL},
      has_elevator = #{hasElevator,jdbcType=INTEGER},
      nature = #{nature,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      building_rise = #{buildingRise,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      owner_name = #{ownerName,jdbcType=VARCHAR},
      owner_tel = #{ownerTel,jdbcType=VARCHAR},
      owner_psptid = #{ownerPsptid,jdbcType=VARCHAR},
      account_balance = #{accountBalance,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateOwnerInfo" parameterType="com.qth.model.House">
    update house
    set
      owner_name = #{ownerName,jdbcType=VARCHAR},
      owner_tel = #{ownerTel,jdbcType=VARCHAR},
      owner_psptid = #{ownerPsptid,jdbcType=VARCHAR}
     where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    h.*, ra.`name` as residentialAreaName,ra.id as residentialArea,b.id as building,
    b.`name`as buildingName,
    u.`name` as unitName
    FROM
    house h
    LEFT JOIN unit u ON u.id = h.unit
    LEFT JOIN building b ON b.id = u.building
    LEFT JOIN residential_area ra ON ra.id = b.residential_area
    where h.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, unit, floor, code, area, has_elevator, nature, type, building_rise,
    unit_price, owner_name, owner_psptid, account_balance
    from house
  </select>
  <select id="selectDataTable" resultMap="BaseResultMap" parameterType="com.qth.model.House">
    SELECT
    h.*, ra.`name` as residentialAreaName,
    b.`name`as buildingName,
    u.`name` as unitName
    FROM
    house h
    LEFT JOIN unit u ON u.id = h.unit
    LEFT JOIN building b ON b.id = u.building
    LEFT JOIN residential_area ra ON ra.id = b.residential_area
    <where>
    <if test="code!=null">
      and h.code LIKE '%${code}%'
    </if>
    <if test="residentialArea!=null">
      and ra.id=#{residentialArea,jdbcType=VARCHAR}
    </if>
    <if test="building!=null">
      and b.id=#{building,jdbcType=VARCHAR}
    </if>
    <if test="unit!=null">
      and u.id=#{unit,jdbcType=VARCHAR}
    </if>
    <if test="floor!=null and floor!=''">
      and h.floor=#{floor,jdbcType=VARCHAR}
    </if>
    <if test="name!=null and name!=''">
      and h.name=#{name,jdbcType=VARCHAR}
    </if>
    <if test="hasElevator!=null and hasElevator!=''">
      and h.has_elevator=#{hasElevator,jdbcType=VARCHAR}
    </if>
    </where>
    <if test="length>0">
      limit #{start} ,#{length}
    </if>
  </select>
  <select id="selectDataTableCount" resultType="int" parameterType="com.qth.model.House">
    SELECT
    count(h.id)
    FROM
    house h
    LEFT JOIN unit u ON u.id = h.unit
    LEFT JOIN building b ON b.id = u.building
    LEFT JOIN residential_area ra ON ra.id = b.residential_area
    <where>
      <if test="code!=null">
        and h.code LIKE '%${code}%'
      </if>
      <if test="residentialArea!=null">
        and ra.id=#{residentialArea,jdbcType=VARCHAR}
      </if>
      <if test="building!=null">
        and b.id=#{building,jdbcType=VARCHAR}
      </if>
      <if test="unit!=null">
        and u.id=#{unit,jdbcType=VARCHAR}
      </if>
      <if test="floor!=null and floor!=''">
        and h.floor=#{floor,jdbcType=VARCHAR}
      </if>
      <if test="name!=null and name!=''">
        and h.name=#{name,jdbcType=VARCHAR}
      </if>
      <if test="hasElevator!=null and hasElevator!=''">
        and h.has_elevator=#{hasElevator,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <update id="updateBalanceByCode" parameterType="com.qth.model.House">
    UPDATE house set account_balance = #{accountBalance} where code = #{code}
  </update>

  <select id="selectBalanceByCode" parameterType="java.lang.String" resultType="java.math.BigDecimal">
    select account_balance from house where code = #{value}
  </select>

  <select id="selectByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from house where code = #{value}
  </select>

  <!-- 结息日期-->

  <select id="lastAccrualInResidentialArea" parameterType="java.lang.Integer" resultType="java.util.Date">
    SELECT
    max(h.accrual_time)
    FROM
    house h
    INNER JOIN unit u ON h.unit = u.id
    INNER JOIN building b ON b.id = u.building
    WHERE
    b.residential_area = #{value}
  </select>

  <select id="lastAccrualInBuilding" parameterType="java.lang.Integer" resultType="java.util.Date">
    SELECT
    max(h.accrual_time)
    FROM
    house h
    INNER JOIN unit u ON h.unit = u.id
    INNER JOIN building b ON b.id = u.building
    WHERE
    b.id = #{value}
  </select>

  <select id="lastAccrualInUnit" parameterType="java.lang.Integer" resultType="java.util.Date">
    SELECT
    max(h.accrual_time)
    FROM
    house h
    WHERE
    h.unit = #{value}
  </select>

  <select id="lastAccrualInFloor" parameterType="com.qth.model.House" resultType="java.util.Date">
    SELECT
    max(h.accrual_time)
    FROM
    house h
    WHERE
    h.unit = #{unit} and h.floor = #{floor}
    GROUP BY h.floor
  </select>

  <!-- houses search-->

  <select id="allHousesInResidentialArea" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    h.*
    FROM
    house h
    INNER JOIN unit u ON h.unit = u.id
    INNER JOIN building b ON b.id = u.building
    WHERE
    b.residential_area = #{value}
  </select>


  <select id="allHousesInBuilding" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    h.*
    FROM
    house h
    INNER JOIN unit u ON h.unit = u.id
    INNER JOIN building b ON b.id = u.building
    WHERE
    b.id = #{value}
  </select>


  <select id="allHousesInUnit" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    h.*
    FROM
    house h
    WHERE
    h.unit = #{value}
  </select>

  <select id="allHousesInFloor" parameterType="com.qth.model.House" resultMap="BaseResultMap">
    SELECT
    h.*
    FROM
    house h
    WHERE
    h.unit = #{unit} and h.floor = #{floor}
  </select>

  <select id="selectSimpleOne" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    h.*
    FROM
    house h
    WHERE
    h.id = #{value}
  </select>

  <select id="selectByTreeNode" parameterType="com.qth.model.dto.HouseTreeModel" resultMap="BaseResultMap">
    SELECT
    h.*
    FROM
    house h
    LEFT JOIN unit u ON u.id = h.unit
    LEFT JOIN building b ON b.id = u.building
    LEFT JOIN residential_area ra ON ra.id = b.residential_area
    where 1=1
    <choose>
      <when test="level == 0">
        and ra.id = #{id}
      </when>
      <when test="level == 1">
        and b.id = #{id}
      </when>
      <when test="level == 2">
        and u.id = #{id}
      </when>
      <when test="level == 3">
        and u.id = #{id} and h.floor = #{name}
      </when>
      <when test="level == 4">
        and h.id = #{id}
      </when>
    </choose>
      <if test="ownerName!=null and ownerName.length >0">
        and h.owner_name = #{ownerName}
      </if>
      <if test="houseCode!=null and houseCode.length >0">
        and h.code LIKE '%${houseCode}%'
      </if>
      <if test="hasOwner!=null and hasOwner">
        and h.owner_name is not null
      </if>
      <if test="hasOwner!=null and !hasOwner">
        and (h.owner_name is null or h.owner_name='')
      </if>
    <if test="length>0">
      limit #{start} ,#{length}
    </if>
  </select>

  <select id="selectCountByTreeNode" parameterType="com.qth.model.dto.HouseTreeModel" resultType="int">
    SELECT
    count(h.id)
    FROM
    house h
    LEFT JOIN unit u ON u.id = h.unit
    LEFT JOIN building b ON b.id = u.building
    LEFT JOIN residential_area ra ON ra.id = b.residential_area
    where 1=1
    <choose>
      <when test="level == 0">
        and ra.id = #{id}
      </when>
      <when test="level == 1">
        and b.id = #{id}
      </when>
      <when test="level == 2">
        and u.id = #{id}
      </when>
      <when test="level == 3">
        and u.id = #{id} and h.floor = #{name}
      </when>
      <when test="level == 4">
        and h.id = #{id}
      </when>
    </choose>
    <if test="ownerName!=null and ownerName.length >0">
      and h.owner_name = #{ownerName}
    </if>
    <if test="houseCode!=null and houseCode.length >0">
      and h.code LIKE '%${houseCode}%'
    </if>
    <if test="hasOwner!=null and hasOwner">
      and h.owner_name is not null
    </if>
    <if test="hasOwner!=null and !hasOwner">
      and (h.owner_name is null or h.owner_name='')
    </if>
  </select>

  <update id="updateByAccrualInfo" parameterType="com.qth.model.dto.AccrualInfo">
    update house set account_balance = #{newBalance},accrual_time = #{endTime},accrual_balance = #{newBalance}
    where code = #{houseCode}
  </update>

  <select id="findByUnitAndFloor"  resultMap="BaseResultMap">
    SELECT
    h.*
    FROM
    house h
    WHERE
    h.unit = #{arg0} and h.floor = #{arg1} and h.`name`=#{arg2}
    limit 0,1
  </select>

  <select id="invoiceInfoByCode" parameterType="java.lang.String" resultType="com.qth.model.dto.InvoiceInfo">
    SELECT
        ra. NAME AS projectName,
        h.type as houseType,
        CONCAT(
            ra. NAME,
            b. NAME,
            '栋',
            u. NAME,
            '单元',
            h.floor,
            '层',
            h.`name`,
            '号'
        ) AS address
    FROM
        house h
    LEFT JOIN unit u ON u.id = h.unit
    LEFT JOIN building b ON b.id = u.building
    LEFT JOIN residential_area ra ON ra.id = b.residential_area
    WHERE
        h. CODE = #{value}
  </select>
</mapper>